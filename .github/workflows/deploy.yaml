name: CI/CD for time-app project

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  REGISTRY: gchr.io
  IMAGE_NAME: ${{github.repository}}

jobs:
  test:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ["20.19.3"]

    steps:
      - name: Cloning repository
        uses: actions/checkout@v4

      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Frontend dependency install
        working-directory: ./test
        run: npm install

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Restore .NET dependencies
        working-directory: ./Backend/Backend.Api
        run: dotnet restore


  build-and-deploy:
    if: github.event_name == 'push'
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Cloning repository
        uses: actions/checkout@v4

      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push Backend (dotnet)
        run: |
          docker build -t ${{ secrets.docker_username }}/dotnet-backend -f ./Backend
          docker push ${{ secrets.DOCKER_USERNAME }}/dotnet-backend

      - name: Build and push Frontend (React)
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/react-frontend ./test
          docker push ${{ secrets.DOCKER_USERNAME }}/react-frontend

  deploy:
    if: github.event_name == 'workflow_dispatch' 
    runs-on: ubuntu-latest
    steps:
      - name: Cloning repository
        uses: actions/checkout@v4

      - name: Azure Debian VM Deploy
        uses: appleboy/ssh-action@v1
        with:
          host: ${{secrets.AZURE_VM_HOST}}
          username: ${{secrets.AZURE_VM_USERNAME}}
          key: ${{secrets.AZURE_VM_SSH_KEY}}
          port: 22

          script: |
            if [ ! -d "/app/IA/.git" ]; then
              git clone https://github.com/${{ github.repository }} /app/IA
            fi

            cd /app/IA
            git pull origin main

            docker compose pull
            docker compose down
            docker compose up -d
            docker image prune -f
